import*as e from"react";import{useMountEffect as t}from"primereact/hooks";import{Ripple as n}from"primereact/ripple";import{Tooltip as o}from"primereact/tooltip";import{ObjectUtils as r,DomHandler as l,classNames as a,IconUtils as c}from"primereact/utils";function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},i.apply(this,arguments)}var u={defaultProps:{__TYPE:"ToggleButton",id:null,onIcon:null,offIcon:null,onLabel:"Yes",offLabel:"No",iconPos:"left",style:null,className:null,checked:!1,tabIndex:0,tooltip:null,tooltipOptions:null,onChange:null,onFocus:null,onBlur:null,children:void 0},getProps:function(e){return r.getMergedProps(e,u.defaultProps)},getOtherProps:function(e){return r.getDiffProps(e,u.defaultProps)}},p=e.memo(e.forwardRef((function(p,s){var f=u.getProps(p),d=e.useRef(null),m=f.onLabel&&f.onLabel.length>0&&f.offLabel&&f.offLabel.length>0,g=f.onIcon&&f.onIcon.length>0&&f.offIcon&&f.offIcon.length>0,b=m?f.checked?f.onLabel:f.offLabel:"&nbsp;",h=f.checked?f.onIcon:f.offIcon,v=function(e){!f.disabled&&f.onChange&&f.onChange({originalEvent:e,value:!f.checked,stopPropagation:function(){e.stopPropagation()},preventDefault:function(){e.preventDefault()},target:{name:f.name,id:f.id,value:!f.checked}})};e.useImperativeHandle(s,(function(){return{props:f,focus:function(){return l.focusFirstElement(d.current)},getElement:function(){return d.current}}})),t((function(){f.autoFocus&&l.focusFirstElement(d.current)}));var P=r.isNotEmpty(f.tooltip),I=f.disabled?-1:f.tabIndex,y=u.getOtherProps(f),E=a("p-button p-togglebutton p-component",{"p-button-icon-only":g&&!m,"p-highlight":f.checked,"p-disabled":f.disabled},f.className),k=function(){if(g){var e=a("p-button-icon p-c",{"p-button-icon-left":"left"===f.iconPos&&b,"p-button-icon-right":"right"===f.iconPos&&b});return c.getJSXIcon(h,{className:e},{props:f})}return null}();return e.createElement(e.Fragment,null,e.createElement("div",i({ref:d,id:f.id,className:E,style:f.style},y,{onClick:v,onFocus:f.onFocus,onBlur:f.onBlur,onKeyDown:function(e){32===e.keyCode&&(v(e),e.preventDefault())},tabIndex:I,role:"button","aria-pressed":f.checked}),k,e.createElement("span",{className:"p-button-label"},b),e.createElement(n,null)),P&&e.createElement(o,i({target:d,content:f.tooltip},f.tooltipOptions)))})));p.displayName="ToggleButton";export{p as ToggleButton};
